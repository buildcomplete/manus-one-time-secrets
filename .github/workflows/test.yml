name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create test storage directory
      run: mkdir -p test-storage && chmod 777 test-storage
      
    - name: Set environment variables
      run: echo "STORAGE_DIR=$(pwd)/test-storage" >> $GITHUB_ENV
      
    - name: Run tests
      run: npm test
      
    - name: Generate test report
      run: npm test -- --coverage --coverageReporters=text --coverageReporters=lcov --testResultsProcessor="jest-junit"
      env:
        JEST_JUNIT_OUTPUT_DIR: ./reports
        JEST_JUNIT_OUTPUT_NAME: junit.xml
      
    - name: Upload test coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: reports/
        
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: always() # always run even if the previous step fails
      with:
        report_paths: 'reports/junit.xml'
        fail_on_failure: true
        require_tests: true
        check_name: 'Test Report'
