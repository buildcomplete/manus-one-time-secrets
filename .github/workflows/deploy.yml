name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Create deployment package
      run: |
        # Create a deployment directory
        mkdir -p deployment
        
        # Copy necessary files
        cp -r docker deployment/
        cp -r public deployment/
        cp -r src deployment/
        cp package*.json deployment/
        
        # Create version file with timestamp and commit hash
        echo "Version: $(date '+%Y-%m-%d_%H-%M-%S')_${{ github.sha }}" > deployment/version.txt
        
        # Create zip archive
        cd deployment
        zip -r ../one-time-secrets-${{ github.event.inputs.environment }}.zip .
        cd ..
        
    - name: Deploy to server via SCP
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        # Alternatively, use password authentication if preferred
        # password: ${{ secrets.SERVER_PASSWORD }}
        source: "one-time-secrets-${{ github.event.inputs.environment }}.zip"
        target: "/tmp"
        
    - name: Extract and deploy on server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        # Alternatively, use password authentication if preferred
        # password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          # Create deployment directory if it doesn't exist
          mkdir -p /opt/one-time-secrets/${{ github.event.inputs.environment }}
          
          # Extract the deployment package
          cd /opt/one-time-secrets/${{ github.event.inputs.environment }}
          unzip -o /tmp/one-time-secrets-${{ github.event.inputs.environment }}.zip
          
          # Set environment variables
          echo "DOMAIN=${{ secrets.DOMAIN_${{ github.event.inputs.environment }} }}" > .env
          
          # Install production dependencies
          cd /opt/one-time-secrets/${{ github.event.inputs.environment }}
          npm ci --only=production
          
          # Create storage directory with appropriate permissions
          mkdir -p storage
          chmod 777 storage
          
          # Deploy with docker-compose
          docker-compose -f docker/docker-compose.yml up -d
          
          # Clean up the temporary zip file
          rm /tmp/one-time-secrets-${{ github.event.inputs.environment }}.zip
